generator client {
	provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
	id Int @id @default(autoincrement())

	fullName String
	email String @unique 
	password String

	cart Cart?
	orders Order[]
	verified DateTime?
	verificationCode VerificationCode?
	role UserRole @default(USER)

	provider String?
	providerId String?

	createdAt DateTime @default(now())
	updateAt DateTime @updatedAt
}

model Category {
	id Int @id @default(autoincrement())

	name String
	products Product[]
}

model Product {
	id Int @id @default(autoincrement())

	name String
	imageUrl String

	category Category @relation(fields: [categoryId], references: [id])
	categoryId Int

	ingredients Ingredient[]

	variations ProductItem[]

	createdAt DateTime @default(now())
	updateAt DateTime @updatedAt
}

model Ingredient {
	id Int @id @default(autoincrement())

	name String
	price Int
	imageUrl String

	products Product[]

	cartItems CartItem[]
}

model ProductItem {
	id Int @id @default(autoincrement())

	price Int
	size PizzaSize?
	pizzaType PizzaType?

	cartsItem CartItem[]

	product Product @relation(fields: [productId], references: [id])
	productId Int

}

model Cart {
	id Int @id @default(autoincrement())

	user User? @relation(fields: [userId], references: [id])
	userId Int? @unique

	token String

	totalAmount Int @default(0)

	items CartItem[]

	createdAt DateTime @default(now())
	updateAt DateTime @updatedAt
}

model CartItem {
	id Int @id @default(autoincrement())

	cart Cart @relation(fields: [cartId], references: [id])
	cartId Int

	productItem ProductItem @relation(fields: [productItemId], references: [id])
	productItemId Int

	quantity Int @default(1)

	ingredients Ingredient[]	

	createdAt DateTime @default(now())
	updateAt DateTime @updatedAt
}


model Order {
	id Int @id @default(autoincrement())

	user User? @relation(fields: [userId], references: [id])
	userId Int?

	token String

	totalAmount Int

	address String
	fullName String
	phone String
	email String?

	status OrderStatus @default(PENDING)

	paymentId String?

	items Json


	createdAt DateTime @default(now())
	updateAt DateTime @updatedAt
}

model VerificationCode {
	id Int @id @default(autoincrement())

	user User @relation(fields: [userId], references: [id])
	userId Int @unique

	code String @unique

	createdAt DateTime @default(now())
	expireAt DateTime 

	@@unique([userId, code])
}

enum OrderStatus {
	PENDING
	CONFIRMED
	CANCELLED
	DELIVERED
}

enum UserRole {
	USER
	ADMIN
}

enum PizzaSize {
	SMALL
	MEDIUM
	LARGE
}

enum PizzaType {
	REGULAR
	THIN
}

model Story {
	id Int @id @default(autoincrement())
	previewImageUrl String

	items StoryItem[]

	createdAt DateTime @default(now())
}
model StoryItem {
	id Int @id @default(autoincrement())

	storyId Int
	story Story @relation(fields: [storyId], references: [id])

	sourceUrl String

	createdAt DateTime @default(now())
}
